---

name: CI

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:

## We specify a concurrency group with automated cancellation. This means that
## other pushes on the same `github.ref` (eg. other pushes to the same pull
## request) cancel previous occurrences of the CI.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build-orianne:
    name: Build Orianne
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code.
        uses: actions/checkout@v4

        ## NOTE: Orianne is an ARM machine, but the GitHub runners are Intel
        ## machines. We therefore install the emulation binaries for QEMU and
        ## tell Nix to behave as an `aarch64-linux` machine.

      - name: Install emulation binaries for QEMU
        run: sudo apt-get update -y && sudo apt-get install -y qemu-user-static

      - name: Install and configure Nix
        uses: cachix/install-nix-action@v30
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            system = aarch64-linux

      - name: Build Orianne
        run: |
          nix build \
              .#nixosConfigurations.orianne.config.system.build.toplevel \
              --override-input secrets $(mktemp -d)

  build-siegfried:
    name: Build Siegfried
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code.
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Build Siegfried
        run: |
          nix build  \
              .#nixosConfigurations.siegfried.config.system.build.toplevel \
              --override-input secrets $(mktemp -d)

  build-dagrun:
    name: Build Dagrún
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code.
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Build Dagrún
        run: |
          nix build  \
              .#nixosConfigurations.dagrun.config.system.build.toplevel \
              --override-input secrets $(mktemp -d)

  build-wallace:
    name: Build Wallace
    runs-on: ubuntu-latest

    steps:
      - name: Free some extra space
        run: |
          echo 'Available storage before:'
          sudo df -h
          echo
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          echo 'Available storage after:'
          sudo df -h
          echo

      - name: Check out repository code.
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Build Wallace
        run: |
          nix build \
              .#nixosConfigurations.wallace.config.system.build.toplevel \
              --override-input secrets $(mktemp -d)

      - name: Remaining space
        run: |
          echo 'Available storage:'
          sudo df -h

  run-flake-checks:
    name: Run flake checks
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code.
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Run flake checks
        run: |
          nix flake check \
              --print-build-logs \
              --override-input secrets $(mktemp -d)
